// This file is generated by Firebase Genkit.
// Generated on: {{generated_on}}
'use server';

/**
 * @fileOverview Provides suggestions for the next quantum gate to use in a circuit.
 *
 * - suggestNextGate - A function that suggests the next gate.
 * - SuggestNextGateInput - The input type for the suggestNextGate function.
 * - SuggestNextGateOutput - The return type for the suggestNextGate function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestNextGateInputSchema = z.object({
  circuitDescription: z
    .string()
    .describe('A description of the current quantum circuit design.'),
  desiredState: z
    .string()
    .optional()
    .describe('The desired quantum state to achieve (optional).'),
  availableGates: z
    .string()
    .describe('A list of available quantum gates for use.'),
});
export type SuggestNextGateInput = z.infer<typeof SuggestNextGateInputSchema>;

const SuggestNextGateOutputSchema = z.object({
  suggestedGate: z
    .string()
    .describe('The suggested next quantum gate to use.'),
  reasoning: z
    .string()
    .describe('The reasoning behind the gate suggestion.'),
});
export type SuggestNextGateOutput = z.infer<typeof SuggestNextGateOutputSchema>;

export async function suggestNextGate(
  input: SuggestNextGateInput
): Promise<SuggestNextGateOutput> {
  return suggestNextGateFlow(input);
}

const suggestNextGatePrompt = ai.definePrompt({
  name: 'suggestNextGatePrompt',
  input: {schema: SuggestNextGateInputSchema},
  output: {schema: SuggestNextGateOutputSchema},
  prompt: `You are an expert quantum computing assistant. Given the current quantum circuit design,
you will suggest the next most logical quantum gate to use to achieve a desired quantum state.

Current circuit description: {{{circuitDescription}}}
Desired quantum state: {{{desiredState}}}
Available gates: {{{availableGates}}}

Suggest the next gate and explain your reasoning.

Suggestion: {{suggestedGate}}
Reasoning: {{reasoning}}`,
});

const suggestNextGateFlow = ai.defineFlow(
  {
    name: 'suggestNextGateFlow',
    inputSchema: SuggestNextGateInputSchema,
    outputSchema: SuggestNextGateOutputSchema,
  },
  async input => {
    const {output} = await suggestNextGatePrompt(input);
    return output!;
  }
);
