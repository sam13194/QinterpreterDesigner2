"""Quantum translator package for converting between quantum computing frameworks."""

# Import only what's available, handle errors gracefully
__all__ = []

try:
    from .qiskit_translator import QiskitTranslator  # noqa: F401

    __all__.append("QiskitTranslator")
except ImportError as e:
    print(f"Warning: QiskitTranslator not available: {e}")

try:
    from .braket_translator import BraketTranslator  # noqa: F401

    __all__.append("BraketTranslator")
except ImportError as e:
    print(f"Warning: BraketTranslator not available: {e}")

try:
    from .cirq_translator import CirqTranslator  # noqa: F401

    __all__.append("CirqTranslator")
except ImportError as e:
    print(f"Warning: CirqTranslator not available: {e}")

try:
    from .pennylane_translator import PennyLaneTranslator  # noqa: F401

    __all__.append("PennyLaneTranslator")
except ImportError as e:
    print(f"Warning: PennyLaneTranslator not available: {e}")

try:
    from .pyquil_translator import PyQuilTranslator  # noqa: F401

    __all__.append("PyQuilTranslator")
except ImportError as e:
    print(f"Warning: PyQuilTranslator not available: {e}")

print(f"Available translators: {__all__}")
